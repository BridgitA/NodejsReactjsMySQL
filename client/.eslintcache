[{"/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/index.js":"1","/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/App.js":"2","/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/components/Posts/Posts.js":"3","/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/components/Form/Form.js":"4","/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/components/Posts/Post/Post.js":"5","/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/styles.js":"6","/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/components/Form/styles.js":"7","/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/components/Posts/Post/styles.js":"8","/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/components/Posts/styles.js":"9","/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/reducers/index.js":"10","/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/reducers/posts.js":"11","/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/actions/posts.js":"12","/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/api/index.js":"13","/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/constants/actionTypes.js":"14"},{"size":472,"mtime":1611903310399,"results":"15","hashOfConfig":"16"},{"size":1581,"mtime":1611979491484,"results":"17","hashOfConfig":"16"},{"size":762,"mtime":1611972167148,"results":"18","hashOfConfig":"16"},{"size":2654,"mtime":1611978145521,"results":"19","hashOfConfig":"16"},{"size":2273,"mtime":1611978413770,"results":"20","hashOfConfig":"16"},{"size":526,"mtime":1611979749157,"results":"21","hashOfConfig":"16"},{"size":492,"mtime":1611860553804,"results":"22","hashOfConfig":"16"},{"size":1114,"mtime":1611860688984,"results":"23","hashOfConfig":"16"},{"size":265,"mtime":1611860807519,"results":"24","hashOfConfig":"16"},{"size":113,"mtime":1611864575977,"results":"25","hashOfConfig":"16"},{"size":677,"mtime":1611980725709,"results":"26","hashOfConfig":"16"},{"size":1315,"mtime":1611980555794,"results":"27","hashOfConfig":"16"},{"size":407,"mtime":1611976764716,"results":"28","hashOfConfig":"16"},{"size":162,"mtime":1611980423249,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"8y63e6",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/index.js",[],["62","63"],"/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/App.js",[],"/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/components/Posts/Posts.js",[],"/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/components/Form/Form.js",["64"],"import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\n\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\n\nconst Form = ({ currentId, setCurrentId }) => {\n    const [postData, setPostData] = useState({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\n    const post = useSelector((state) => (currentId ? state.posts.find((p) => p._id = currentId) : null));\n    const dispatch = useDispatch();\n    const classes = useStyles();\n\n    useEffect(() => {\n        if(post) setPostData(post);\n    }, [post]);\n\n    const clear = () => {\n        setCurrentId(null);\n        setPostData({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(currentId) {\n            dispatch(updatePost(currentId, postData));\n        } else {\n            dispatch(createPost(postData));\n        }\n\n        clear();\n    }\n\n    return (\n        <Paper className={classes.paper}>\n            <form autoComplete=\"off\" noValidate className={'${classes.root} ${classes.form}'} onSubmit={handleSubmit}>\n                <Typography variant=\"h6\">{currentId ? 'Editing' : 'Ask' } a Question</Typography>\n                <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e) => setPostData({ ...postData, creator: e.target.value })} />\n                <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\n                <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\n                <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\n                <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({base64}) => setPostData({ ...postData, selectedFile: base64 })}/></div>\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n                <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n            </form>\n        </Paper>\n    )\n}\n\nexport default Form;","/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/components/Posts/Post/Post.js",[],"/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/styles.js",[],"/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/components/Form/styles.js",[],"/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/components/Posts/Post/styles.js",[],["65","66"],"/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/components/Posts/styles.js",[],"/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/reducers/index.js",[],"/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/reducers/posts.js",["67"],"import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\n\nexport default (posts = [], action) => {\n    switch (action.type) {\n        case FETCH_ALL:\n            return action.payload;\n        case CREATE:\n            return [...posts, action.payload];\n        case UPDATE:\n            return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n        case DELETE:\n            return posts.filter((post) => post._id !== action.payload); \n        case LIKE:\n            return posts.map((post) => (post._id === action.payload._id ? action.payload : post));               \n        default:\n            return posts;\n    }\n}","/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/actions/posts.js",[],"/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/api/index.js",[],"/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/constants/actionTypes.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":38,"column":60,"nodeType":"74","messageId":"75","endLine":38,"endColumn":93},{"ruleId":"68","replacedBy":"76"},{"ruleId":"70","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":3,"column":1,"nodeType":"80","endLine":18,"endColumn":2},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression",["81"],["82"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]