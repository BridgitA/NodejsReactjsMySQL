[{"/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/index.js":"1","/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/App.js":"2","/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/components/Posts/Posts.js":"3","/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/components/Form/Form.js":"4","/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/components/Posts/Post/Post.js":"5","/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/styles.js":"6","/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/components/Form/styles.js":"7","/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/components/Posts/Post/styles.js":"8","/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/components/Posts/styles.js":"9","/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/reducers/index.js":"10","/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/reducers/posts.js":"11","/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/actions/posts.js":"12","/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/api/index.js":"13"},{"size":472,"mtime":1611903310399,"results":"14","hashOfConfig":"15"},{"size":1547,"mtime":1611970084445,"results":"16","hashOfConfig":"15"},{"size":762,"mtime":1611972167148,"results":"17","hashOfConfig":"15"},{"size":2626,"mtime":1611902687467,"results":"18","hashOfConfig":"15"},{"size":2012,"mtime":1611901607179,"results":"19","hashOfConfig":"15"},{"size":396,"mtime":1611858835017,"results":"20","hashOfConfig":"15"},{"size":492,"mtime":1611860553804,"results":"21","hashOfConfig":"15"},{"size":1114,"mtime":1611860688984,"results":"22","hashOfConfig":"15"},{"size":265,"mtime":1611860807519,"results":"23","hashOfConfig":"15"},{"size":113,"mtime":1611864575977,"results":"24","hashOfConfig":"15"},{"size":387,"mtime":1611971770158,"results":"25","hashOfConfig":"15"},{"size":786,"mtime":1611972372989,"results":"26","hashOfConfig":"15"},{"size":273,"mtime":1611896670614,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"8y63e6",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},"/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/index.js",[],["58","59"],"/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/App.js",[],"/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/components/Posts/Posts.js",[],"/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/components/Form/Form.js",["60"],"import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\n\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\n\nconst Form = ({ currentId, setCurrentId }) => {\n    const [postData, setPostData] = useState({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\n    const post = useSelector((state) => (currentId ? state.posts.find((p) => p._id = currentId) : null));\n    const dispatch = useDispatch();\n    const classes = useStyles();\n\n    useEffect(() => {\n        if(post) setPostData(post);\n    }, [post]);\n\n    const clear = () => {\n        setCurrentId(null);\n        setPostData({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(currentId) {\n            dispatch(updatePost(currentId, postData));\n        } else {\n            dispatch(createPost(postData));\n        }\n\n        clear();\n    }\n\n    return (\n        <Paper className={classes.paper}>\n            <form autoComplete=\"off\" noValidate className={'${classes.root} ${classes.form}'} onSubmit={handleSubmit}>\n                <Typography variant=\"h6\">{currentId ? 'Editing' : 'Ask' } a Question</Typography>\n                <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e) => setPostData({ ...postData, creator: e.target.value })} />\n                <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\n                <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\n                <TextField name=\"tags\" variant=\"outlined\" label=\"Tags\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value })} />\n                <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({base64}) => setPostData({ ...postData, selectedFile: base64 })}/></div>\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n                <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n            </form>\n        </Paper>\n    )\n}\n\nexport default Form;","/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/components/Posts/Post/Post.js",["61"],"import React from 'react';\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport moment from 'moment';\n\nimport useStyles from './styles';\n\nconst Post = ({ post, setCurrentId }) => {\n    const classes = useStyles();\n    return (\n        <Card className={classes.card}>\n            <CardMedia className={classes.media} image={postMessage.selectedFile} title={post.title} />\n            <div className={classes.overlay}>\n                <Typography variant=\"h6\">{post.creator}</Typography>\n                <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\n            </div>\n            <div className={classes.overlay2}>\n                <Button style={{color: 'white'}} size=\"small\" onClick={() => setCurrentId(post._id)}>\n                    <MoreHorizIcon fontSize=\"default\" />\n                </Button>\n            </div>\n            <div className={classes.details}>\n                <Typography variant=\"body2\" color=\"textPrimary\">{post.tags.map((tag) => '#${tag} ')}</Typography>\n            </div>\n            <Typography className={classes.title} variant=\"h5\" gutterBottom>{post.title}</Typography>\n            <CardContent>\n                <Typography variant=\"h5\" gutterBottom>{post.message}</Typography>\n            </CardContent>\n            <CardActions className={classes.cardActions}>\n                <Button size=\"small\" color=\"primary\" onClick={() => {}}>\n                    <ThumbUpAltIcon fontSize=\"small\" />\n                    Like\n                    {post.likeCount}\n                </Button>\n                <Button size=\"small\" color=\"primary\" onClick={() => {}}>\n                    <DeleteIcon fontSize=\"small\" />\n                    Delete\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default Post;","/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/styles.js",[],"/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/components/Form/styles.js",[],"/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/components/Posts/Post/styles.js",[],"/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/components/Posts/styles.js",[],"/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/reducers/index.js",[],"/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/reducers/posts.js",["62"],"/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/actions/posts.js",[],"/Users/bridgitarika/Workspace/NRM/NodejsReactjsMySQL/client/src/api/index.js",["63"],"import axios from 'axios';\n\nconst url = 'http://localhost:5000/posts';\n\nexport const fetchPosts = () => axios.get(url);\nexport const createPost = (newPost) => axios.post(url, newPost);\nexport const updatePost = (id, updatedPost) => axios.patch('${url}/${id}', updatedPost);",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":38,"column":60,"nodeType":"70","messageId":"71","endLine":38,"endColumn":93},{"ruleId":"68","severity":1,"message":"69","line":25,"column":89,"nodeType":"70","messageId":"71","endLine":25,"endColumn":99},{"ruleId":"72","severity":1,"message":"73","line":1,"column":1,"nodeType":"74","endLine":12,"endColumn":2},{"ruleId":"68","severity":1,"message":"69","line":7,"column":60,"nodeType":"70","messageId":"71","endLine":7,"endColumn":74},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]